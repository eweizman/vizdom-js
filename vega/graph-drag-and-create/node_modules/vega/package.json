{
  "name": "vega",
  "version": "2.2.6",
  "description": "The Vega visualization grammar.",
  "keywords": [
    "vega",
    "visualization",
    "interaction",
    "dataflow",
    "grammar",
    "data",
    "d3"
  ],
  "repository": {
    "type": "git",
    "url": "http://github.com/vega/vega.git"
  },
  "author": {
    "name": "Arvind Satyanarayan",
    "url": "http://arvindsatya.com"
  },
  "contributors": [
    {
      "name": "Jeffrey Heer",
      "url": "http://idl.cs.washington.edu"
    }
  ],
  "license": "BSD-3-Clause",
  "main": "index.js",
  "bin": {
    "vg2png": "./bin/vg2png",
    "vg2svg": "./bin/vg2svg"
  },
  "dependencies": {
    "d3": "^3.5.6",
    "d3-geo-projection": "^0.2.15",
    "d3.layout.cloud": "^1.1.1",
    "datalib": "^1.4.6",
    "topojson": "^1.6.19",
    "vega-dataflow": "^1.2.5",
    "vega-expression": "^1.0.3",
    "vega-logging": "^1.0.1",
    "vega-scenegraph": "^1.0.10",
    "yargs": "^3.15.0"
  },
  "devDependencies": {
    "browserify": "^10.2.6",
    "browserify-shim": "^3.8.9",
    "browserify-versionify": "^1.0.4",
    "chai": "^3.0.0",
    "chai-spies": "^0.6.0",
    "exorcist": "^0.4.0",
    "istanbul": "latest",
    "jsdom": "^3.0.0",
    "jshint": "^2.8.0",
    "jstransform": "^11.0.2",
    "mocha": "^2.2.5",
    "pegjs": "~0.8.0",
    "through": "^2.3.8",
    "tv4": "^1.1.12",
    "uglify-js": "^2.4.24",
    "watchify": "^3.2.3",
    "xmldom": "^0.1.19",
    "xpath": "^0.0.9"
  },
  "scripts": {
    "deploy": "npm run lint && npm run test && scripts/deploy.sh",
    "lint": "jshint src/",
    "test": "mocha --timeout 30000 --recursive test/",
    "cover": "istanbul cover _mocha -- --timeout 30000 --recursive test/",
    "pegjs": "pegjs src/parse/events.pegjs",
    "build": "npm run pegjs && browserify index.js -d -s vg | exorcist vega.js.map > vega.js",
    "postbuild": "uglifyjs vega.js -cm > vega.min.js",
    "schema": "node scripts/schema.js > vega-schema.json",
    "watch": "watchify index.js -v -d -s vg -o 'exorcist vega.js.map > vega.js'"
  },
  "browser": {
    "buffer": false,
    "canvas": false,
    "fs": false,
    "http": false,
    "request": false,
    "sync-request": false,
    "url": false
  },
  "browserify": {
    "transform": [
      "./scripts/strip-schema",
      "browserify-shim",
      "browserify-versionify"
    ]
  },
  "browserify-shim": {
    "d3": "global:d3",
    "d3.layout.cloud": "global:d3.layout.cloud",
    "canvas": "global:canvas",
    "topojson": "global:topojson"
  },
  "readme": "Vega: A Visualization Grammar\n====\n[![Build Status](https://travis-ci.org/vega/vega.svg)](https://travis-ci.org/vega/vega) \n\n**Vega** is a _visualization grammar_, a declarative format for creating and\nsaving interactive visualization designs. With Vega you can describe data \nvisualizations in a JSON format, and generate interactive views using either \nHTML5 Canvas or SVG.\n\nTo learn more, [visit the wiki](https://github.com/vega/vega/wiki).\n\n## The Vega Runtime\n\nThis repository contains the **vega-runtime** system, which parses Vega\nspecifications to produce interactive visualizations which run in the\nbrowser using a scenegraph-based rendering system.\n\n## Build Process\n\nTo manually build Vega, you must have [npm](https://www.npmjs.com/) installed.\n\n1. Run `npm install` in the vega folder to install dependencies.\n2. Run `npm run build`. This will invoke [browserify](http://browserify.org/) to bundle the source files into vega.js, and then [uglify-js](http://lisperator.net/uglifyjs/) to create the minified vega.min.js.\n\nVega visualization specifications can be validated against a [JSON Schema](http://json-schema.org/). To generate the vega-schema.json definition file, run `npm run schema`.\n\nBuilt files are available on [npm](https://www.npmjs.com/package/vega), and under [tagged releases](https://github.com/vega/vega/releases). The latest built versions can be found at [vega.min.js](http://vega.github.io/vega/vega.min.js) and [vega-schema.json](http://vega.github.io/vega/vega-schema.json).\n\n## Vega Server-Side and Command Line Tools\n\nVega can also be run server-side using node.js. When running in \"headless\"\nmode, Vega can be used to render specifications directly to PNG or SVG. In\naddition to the summary below, [see the Headless Mode wiki\ndocumentation](https://github.com/vega/vega/wiki/Headless-Mode) for more\ninformation.\n\n### Command Line Tools\n\nVega includes two command line tools for converting Vega JSON specifications\nto rendered PNG or SVG:\n\n* __vg2png__: `vg2png [-b basedir] vega_json_file [output_png_file]`\n* __vg2svg__: `vg2svg [-b basedir] [-h] vega_json_file [output_svg_file]`\n\nWithin the Vega project directories, you can invoke these utilities using\n`./bin/vg2png` or `./bin/vg2svg`. If you import Vega using npm, these commands\nare accessible either locally (`node_modules/.bin/vg2png`) or globally\n(`vg2png`) depending on how you install the Vega package.\n\n### Using Vega in node.js Projects\n\nTo include Vega in a node project, first install it from the command line\nusing npm (`npm install vega`) or by including `\"vega\"` among the dependencies\nin your package.json file.\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/vega/vega/issues"
  },
  "homepage": "https://github.com/vega/vega",
  "_id": "vega@2.2.6",
  "_from": "vega@"
}
